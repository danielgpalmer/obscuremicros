// rotating anti-clockwise

// format; all bytes Xmax(i.e 3), Ymax(i.e 2), 0.0, 0.1, 1.0, 1.1,.. 
// 0xFF is transparent.
	#define TETROXOFFSET 0
	#define TETROYOFFSET 1
	#define TETROHEADEROFFSET 2
	#define TETROTABLESIZE 224
	#define TETROSTOTAL 7
	#define TETROSIZE 8
	
	uint8_t tetroL[TETROTABLESIZE] = { 
				
				
				3, 2, 0x29, 0x29, 0x29, // L
				      0xff, 0xff, 0x29,
				      
				2, 3, 0x29, 0x29,
				      0x29, 0xff,
				      0x29, 0xff,
				      
				3, 2, 0x29, 0xff,0xff, 
				      0x29,0x29, 0x29,
				
				2, 3, 0xff, 0x29, 
				      0xff, 0x29,
				      0x29, 0x29, 
				
				2, 3, 0x30, 0x26, // Reverse L
				      0x26, 0x30,
				      0x30, 0x30, 
				      
							
				3, 2, 0x26, 0x30, 0x26,
				      0x30, 0x30, 0x30,
				      
				2, 3, 0x30, 0x30,
				      0x30, 0x26,
				      0x26, 0x30,
				      
				3, 2, 0x30, 0x30, 0x30,
				      0x26, 0x30, 0x26,
				
				3, 2, 0xFF, 0x26, 0xFF, // T
				      0x31, 0x31, 0x26, 
				      
				2, 3, 0x26, 0x31,
				      0x26, 0x31,
				      0x31, 0x31,
				      
				3, 2, 0x26, 0x31, 0x31,
				      0x31, 0x26, 0x31,
				      
				2, 3, 0x31, 0x31,	
				      0x31, 0x26,
				      0x31, 0x26,
				
				3, 2, 0x26, 0x32, 0x32,// Z
				      0x32, 0x32, 0x26, 
				
				2, 3, 0x32, 0x32,
				      0x26, 0x26,
				      0x32, 0x32,
				      
				3, 2, 0x32, 0x26, 0x32,
				      0x32, 0x26, 0x32,
				      
				2, 3, 0x32, 0x32,		
				      0x26, 0x26,
				      0x32, 0x32,
				
				3, 2, 0x28, 0x26, 0x28, // Reverse Z / s
				      0x28, 0x26, 0x28, 
				
				2, 3, 0x32, 0x32,
				      0x26, 0x26,
				      0x32, 0x32,
				      
				3, 2, 0x32, 0x26, 0x32,
				      0x32, 0x26, 0x32,
				
				2, 3, 0x32, 0x32,
				      0x26, 0x26,
				      0x32, 0x32, 
				
				2, 2, 0x29, 0x29,  // Square
				      0x29, 0x29, 
				      0xFF, 0xFF,
				      
				2, 2, 0x29, 0x29,
				      0x29, 0x29,
				      0xFF, 0xFF,
				      
				2, 2, 0x29, 0x29,
				      0x29, 0x29,
				      0xFF, 0xFF,
				
				2, 2, 0x29, 0x29,
				      0x29, 0x29,
				      0xFF, 0xFF, 
				
				
				4, 1, 0x29, 0x29, 0x29, 0x29, // Line
				      0xFF, 0xFF,  
				      
				1, 4, 0x29, 
				      0x29,
				      0x29,
				      0x29, 
				      0xFF,0xFF, 
				
				4, 1, 0x29, 0x29, 0x29, 0x29, 
				      0xFF, 0xFF, 
				
				1, 4, 0x29, 
				      0x29,
				      0x29,
				      0x29, 
				      0xFF, 0xFF
	};